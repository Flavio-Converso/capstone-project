@model capstone_project.Models.DTOs.PegiDTO

@{
    ViewData["Title"] = "Edit Pegi";
}

<h1>Edit Pegi</h1>

<form asp-action="Edit" method="post" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="PegiId" />

    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Description" class="control-label"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    @if (Model.ImgByte != null && Model.ImgByte.Length > 0)
    {
        <div class="form-group">
            <label>Current Image</label>
            <br />
            <img src="data:image;base64,@(Convert.ToBase64String(Model.ImgByte))" alt="Current Image" style="max-width:200px; max-height:200px;" />
        </div>
    }

    <div class="form-group">
        <label asp-for="Img" class="control-label">Upload New Image</label>
        <input asp-for="Img" class="form-control-file" type="file" accept=".jpg,.jpeg,.png" />
        <span asp-validation-for="Img" class="text-danger"></span>
    </div>

    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-action="List">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
