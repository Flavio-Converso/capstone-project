@model capstone_project.Models.DTOs.Auth.UserLoginDTO

@{
    ViewData["Title"] = "Login";
    ViewBag.NavbarMarginTop = false;
}
<link rel="stylesheet" href="~/css/auth.css" />
<div class="row myGreyBg">
    <span class="px-4 pt-4 position-fixed">
        <img class="img-fluid" src="~/images/logo_transp.png" alt="logo" style=" height:80px;"> </a>
    </span>
    <div class="col-12 col-lg-6 d-flex flex-column justify-content-center min-vh-100"> 
        <h1 class="text-white text-center mb-3">Login</h1>
        @if (TempData["SuccessMessage"] != null)
        {
            <div id="successMessage" class="text-center text-orange mb-4 fw-bold fs-4">
                @TempData["SuccessMessage"]
            </div>
        }
        <form asp-action="Login" method="post">
            @Html.AntiForgeryToken()
            @if (ViewData.ModelState.ContainsKey("LoginError"))
            {
                <div class="text-valid d-flex justify-content-center mb-2">
                    @Html.ValidationMessage("LoginError")
                </div>
            }

            <div class="form-group d-flex flex-column align-items-center mb-3">
                <input class="w-50" asp-for="Username"  placeholder="Username"/>
                <span asp-validation-for="Username" class="text-valid mt-1"></span>
            </div>

            <div class="form-group d-flex flex-column align-items-center mb-3">
                <input class="w-50" asp-for="Password" type="password" placeholder="Password" />
                <span asp-validation-for="Password" class="text-valid mt-1"></span>
            </div>

            <div class="form-group text-center">
                <input class="auth-btn" type="submit" value="Accedi"  />
            </div>
        </form>
        <div class="mt-4 w-50 d-flex justify-content-center">
            <a  asp-action="Register">Non hai un'account?</a>
        </div>
    </div>
    <div class="d-none d-lg-block col-lg-6 px-0">
        <img src="~/images/banner/login_banner.jpg"  />
    </div>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        setTimeout(function () {
            var successMessage = document.getElementById("successMessage");
            var h1 = document.querySelector("h1");
            if (successMessage) {
                // Add the fade-out class
                successMessage.classList.add("fade-outt");

                // Wait for the transition to finish before fully hiding the element
                setTimeout(function () {
                    successMessage.classList.add("d-none");
                    h1.classList.remove("mb-3");
                    h1.classList.add("mb-5");
                }, 1000); // The time matches the CSS transition (1 second)
            }
        }, 5000); // 5 seconds delay
    </script>
}