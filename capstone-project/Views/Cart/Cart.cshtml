@using capstone_project.Models.DTOs.Cart
@model CartDTO

@{
    ViewBag.Title = "Your Cart";
    ViewBag.NavbarMarginTop = true;
}

<h1 class="text-center text-white mt-5">Carrello</h1>
<div class="container d-flex ">
@if (Model.CartItems.Any())
{
                <div id="showEmpty" class="col-8 myGreyBg2 p-4 cart-left mt-3 me-5">
                    @foreach (var item in Model.CartItems)
                    {   
                        <div id ="cart-item-row-@item.GameId" class="mb-3">
                            <div class="row align-items-center ">
                                <!-- Left Column: Image -->
                                <div class="col-md-5 d-flex justify-content-start">
                                    @if (item.CoverImage != null)
                                    {
                                        var base64Image = Convert.ToBase64String(item.CoverImage);
                                        var imgSrc = $"data:image/png;base64,{base64Image}";
                                        <img src="@imgSrc" alt="@item.GameName Cover" class="img-fluid rounded" />
                                    }                                  
                                </div>

                                <!-- Middle Column: Game Name and Platform -->
                                <div class="col-md-4">
                                    <div class="d-flex flex-column justify-content-between">
                                        <h5 class="fs-5 text-white">@item.GameName</h5>
                                        <p class="text-secondary">@item.GamePlatform</p>
                                        <form id="remove-from-cart-form-@item.GameId" class="remove-from-cart-form" style="display:inline;">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="gameId" value="@item.GameId" />
                                            <input type="hidden" name="source" value="Cart" />
                                            <button type="button" class="btn-delete remove-from-cart-btn px-0" data-gameid="@item.GameId">
                                                <i class="bi bi-trash-fill text-danger fs-3"></i>
                                            </button>
                                        </form>
                                    </div>
                                </div>

                                <!-- Right Column: Price and Quantity -->
                                <div class="col-md-3">
                                    <h5 class="mb-0 text-white text-center mb-3">@item.Price €</h5>
                                    <div class="d-flex justify-content-around">
                                        <!-- Quantity Controls -->
                                        <div class="d-flex align-items-center justify-content-center">
                                    <button type="button" class="btn-decrement btn-cart" data-gameid="@item.GameId"><i class="bi bi-dash-circle-fill fs-2"></i></button>
                                            <input type="number" id="quantity-@item.GameId" value="@item.Quantity" min="1" data-max-quantity="@item.QuantityAvail" readonly style="width:30%;cursor:inherit"/>
                                    <button type="button" class="btn-increment btn-cart" data-gameid="@item.GameId"><i class="bi bi-plus-circle-fill fs-2"></i></button>
                                        </div>
                                    </div>
                        </div>
                            </div>

                            
                        </div>
                        <hr />
                    }
                </div>
                <div class=" mt-3 py-3 px-5 myBlackBg d-flex flex-column ms-5 h-100 position-sticky" style="top:190px" >
                    <span class="text-end text-orange pb-2">Subtot.</span>
                    @foreach (var item in Model.CartItems)
                    {                     
                    <div id="recap-@item.GameId" class="mb-0 d-flex justify-content-between align-items-center">
                    <span class="py-1 text-white pe-4">
                        @(item.GameName.Length > 18 ? item.GameName.Substring(0, 16) + "..." : item.GameName)
                    </span>
                    <span class="text-white" id="total-@item.GameId">@(item.Quantity * item.Price) €</span>
                   </div>
                    }
                    <div class="d-flex flex-column align-items-center pt-4">
                     <h3 class="text-white">Totale: <span class="text-white" id="total-price">@Model.TotalPrice €</span></h3>
                <a asp-action="Checkout" class="auth-btn mt-2">Vai al Checkout<i class="ps-2 bi bi-chevron-compact-right"></i></a>
                <div class="d-flex align-items-center text-white w-100 mt-3">
                    <hr class="flex-grow-1 me-2">
                    <span>o</span>
                    <hr class="flex-grow-1 ms-2">
                </div>
                <a asp-controller="Game" asp-action="List" class="mt-2 text-center text-secondary fs-6 contShopp"><i class="bi bi-chevron-compact-left pe-1"></i>Continua con lo shopping</a>

                    </div>

                </div>

      


    
    <p class="empty d-none">Non ci sono elementi nel carrello.</p>
   
}
else
{
        <p>Non ci sono elementi nel carrello.</p>
}

</div>
<div class="container mt-10">
@if (ViewBag.RelatedGames != null && ViewBag.RelatedGames.Count > 0)
{
    <h3 class="text-white mb-2">Consigliati</h3>
          @foreach (var game in (List<capstone_project.Models.Game>)ViewBag.RelatedGames) // Cast to List<Game>
            {
                <div id="related-game-row-@game.GameId" class="col-8 d-flex justify-content-between align-items-center mt-4">
                   
                            @if (game.GameImages != null && game.GameImages.Any()) // Ensure GameImages exists
                            {

                                var coverImage = game.GameImages.FirstOrDefault(img => img.ImgType == ImageType.Cover); // Get the cover image
                                if (coverImage != null)
                                {
                                    var base64Image = Convert.ToBase64String(coverImage.Img);
                                    var imgSrc = $"data:image/png;base64,{base64Image}";
                                    <a asp-controller="Game" asp-action="Details" asp-route-id="@game.GameId" class="text-decoration-none">
                                        <img src="@imgSrc" alt="@game.Name Cover" class="img-fluid rounded w-100 game-card" />
                                    </a>
                                }
                            }
                            <div class="w-100 d-flex justify-content-between align-items-center">
                                <div class="d-flex flex-column justify-content-center ms-5">
                        <span class="text-white fs-3">
                            @game.Name
                        </span>
                        <span class="text-secondary fs-5">
                            @game.Platform

                        </span>
                                </div>
                                
                                <span class="text-white fs-4">
                                    @game.Price €
                                </span>
                            </div>
                                <form id="add-to-cart-form" class="ms-2 text-end">
                                    @Html.AntiForgeryToken()
                                  <input type="hidden" name="gameId" value="@game.GameId" />
                                  <input type="hidden" name="source" value="Details" />
                                    <button type="button" class="related-add-to-cart-btn auth-btn" data-gameid="@game.GameId">
                                         <i class="bi bi-arrow-up"></i>
                                    </button>
                                </form>
               </div>
                 
          }
     
    }
</div>



<div class="d-flex justify-content-center mt-10 mb-5">

</div>


