@model capstone_project.Models.Game


@{
    ViewBag.Title = "Dettagli Gioco";
    ViewBag.NavbarMarginTop = false;
    ViewBag.Px0 = true;
    var cartGameIds = ViewBag.CartGameIds as List<int> ?? new List<int>(); // List of games in the cart
    var relatedGames = ViewBag.RelatedGames as IEnumerable<capstone_project.Models.Game>;
}
<style>
    body {
        color: white !important;
        display:block !important;
    }
</style>
<!-- banner -->
<div class="container-fluid px-0 position-relative mb-5">

    @if (Model.GameImages != null)
    {
        var coverImage = Model.GameImages.FirstOrDefault(img => img.ImgType == (ImageType)5);
        var base64Image = Convert.ToBase64String(coverImage!.Img);
        var imgSrc = $"data:image/png;base64,{base64Image}";
        <div class="position-relative">
            <img src="@imgSrc" class="img-fluid w-100 firstImg" alt="@Model.Name Banner" style="max-height:690px;" />
        </div>
    }


<div class="container position-absolute game-detail1-abs">
   <div class="row">
    <div class="col-6 position-relative" >
                @if (User.IsInRole("master"))
                {
                <a asp-action="Edit" asp-route-id="@Model.GameId" class="auth-btn position-absolute" style="top:-15%; left:8%">Modifica</a>
                <a asp-action="Delete" asp-route-id="@Model.GameId" class="auth-btn position-absolute" style="top:-15%; left:73%">Elimina</a>
                }
                    
        @{
            var coverImages = Model.GameImages!.Where(img => img.ImgType == ImageType.Cover).ToList();
            foreach (var image in coverImages)
            {
                var base64Image = Convert.ToBase64String(image.Img);
                var imgSrc = $"data:image/png;base64,{base64Image}";
                    <img class="img-fluid w-100 firstImg game-img-cover" src="@imgSrc" alt="Cover Image" style="max-width:616px;" />
            }


        }
    </div>
        <div class="col-6 game-details-info">
<p class="text-center mt-3 fs-2 fw-bold mb-3">@Model.Name</p>
            @if (Model.QuantityAvail != 0)
            {

                <p class="text-center mb-4">
                    <span class="pill-container px-4">
                        <span class="px-2 fs-3">@Model.Platform</span>
                        <span class="divider fs-3">•</span>
                        <i class="fs-3 pt-1 fas fa-check-circle text-success pe-2"></i><span class="fs-4">Disponibile</span>
                    </span>
                </p>
            }
            else
            {
                <div class="text-center mb-4">
                    <div class="pill-container px-4">
                        <span class="px-2 fs-3">@Model.Platform</span>
                        <span class="divider fs-3">•</span>
                        <i class="fs-3 pt-1 fas fa-times-circle text-danger pe-2"></i> <span class="fs-4">Non disponibile</span>
                    </div>
                </div>
            }

            <p class="text-center ms-4 fs-2 fw-bold mb-4"><i class="text-orange bi bi-tag pe-1"></i> @Model.Price €</p>
            <div class="d-flex justify-content-center">
                    @if (ViewBag.IsInWishlist)
                    {
                        <form id="remove-from-wishlist-form" class="me-3">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="gameId" value="@Model.GameId" />
                            <input type="hidden" name="source" value="Details" />
                            <button type="button" id="remove-from-wishlist-btn" class="auth-btn fs-4">
                                <i class="bi bi-suit-heart-fill"></i>
                            </button>
                        </form>
                    }
                    else
                    {
                        <form id="add-to-wishlist-form" class="me-3">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="gameId" value="@Model.GameId" />
                            <input type="hidden" name="source" value="Details" />
                            <button type="button" id="add-to-wishlist-btn" class="auth-btn fs-4">
                                <i class="bi bi-suit-heart"></i>
                            </button>
                        </form>
                    }

                    @if (cartGameIds.Contains(Model.GameId) || Model.QuantityAvail == 0)
                    {
                        @if (Model.QuantityAvail == 0)
                        {
                            <span class="d-none"></span>
                        }
                        else
                        {
                            <button class="cart-btn mx-2 fs-4 ms-2" disabled><i class="bi bi-cart-check-fill pe-2"></i> Nel carrello</button>
                        }
                    }
                    else
                    {
                        <form id="add-to-cart-form" class="ms-2">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="gameId" value="@Model.GameId" />
                            <input type="hidden" name="source" value="Details" />
                            <button type="button" id="add-to-cart-btn" class="auth-btn fs-4">
                                <i class="bi bi-cart2 pe-2"></i> Aggiungi al carrello
                            </button>
                        </form>
                    }

            </div>

       </div>
   </div>
<div class="row mt-2">
   <div class="col-6 mt-2">
   <div>
   <h3 class="text-start mb-3">Riguardo al prodotto</h3>
                    <span class="text-grey text-start d-inline-block">@Model.Description</span>
   </div>
                <p class="text-start text-grey mt-4">
                    Tags:
@foreach (var category in Model.Categories)
{
 <span class="border border-secondary rounded px-2 pb-1 mx-1">@category.Name</span>
                    }
                </p>
   </div>


            <div class="col-6 mt-5 text-center">
                <div class="row mb-3 d-flex align-items-start">
                    <div class="col-4 text-start ps-4">
                        <span>Data di rilascio:</span>
                    </div>
                    <div class="col-8 text-start">
                        <span>@Model.ReleaseDate.ToShortDateString()</span>
                    </div>
                </div>
                <div class="row mb-3 d-flex align-items-start">
                    <div class="col-4 text-start ps-4">
                        <span>Sviluppatore:</span>
                    </div>
                    <div class="col-8 text-start">
                        <span>@Model.Publisher</span>
                    </div>
                </div>
                <div class="row mb-3 d-flex align-items-start">
                    <div class="col-4 text-start ps-4">
                        <span>PEGI:</span>
                    </div>
                    <div class="col-8 text-start">
                        <span>@Model.Pegi.Name</span>
                    </div>
                </div>
                <div class="row d-flex align-items-start">
                    <div class="col-4 text-start ps-4">
                        <span>Restrizioni:</span>
                    </div>
                    <div class="col-8 text-start">
                        @foreach (var restriction in Model.Restrictions)
                        {
                            <span class="border border-secondary rounded text-grey px-2 pb-1 mx-1">@restriction.Name</span>
                        }
                    </div>
                </div>
            </div>


</div>

<div class="row mt-10">

<h2 class="mb-4">Cosa ne pensano i nostri utenti</h2>
            @if (Model.Reviews != null && Model.Reviews.Any())
            {
                foreach (var review in Model.Reviews)
                {
                    <div class="review col-3 mx-2 py-3 d-flex flex-column" id="review-@review.ReviewId">
                       

                        <div class="review-header d-flex align-items-center">
                            <h5 class="d-inline-block pe-3">@review.Title</h5>
                            <div class="review-stars">
                                @for (int i = 0; i < review.Rating; i++)
                                {
                                    <i class="fa fa-star text-orange fs-5"></i>
                                }
                            </div>
                        </div>

                        <p class="review-content mb-0 mt-3">@review.Content</p>

                        <div class="mt-auto">
                            <small>Recensito da @review.User.Username il @review.Date.ToShortDateString()</small>

                            <div class="like-section">
                                <div class="like-group d-flex align-items-center">
                                    <span class="text-orange fs-4" id="like-count-@review.ReviewId">@ViewBag.LikeCounts[@review.ReviewId]</span>
                                    <button class="icon-btn @(ViewBag.HasLiked[@review.ReviewId] ? "unlike-btn" : "like-btn")" data-review-id="@review.ReviewId">
                                        <i class="@(ViewBag.HasLiked[@review.ReviewId] ? "bi bi-hand-thumbs-up-fill" : "bi bi-hand-thumbs-up") text-orange fs-4"></i>
                                    </button>
                                </div>

                                @if (review.UserId == (int)ViewBag.CurrentUserId)
                                {
                                    <form asp-action="Delete" asp-controller="Review" method="post" class="delete-form">
                                        <input type="hidden" name="reviewId" value="@review.ReviewId" />
                                        <input type="hidden" name="gameId" value="@Model.GameId" />
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn-delete">
                                            <i class="bi bi-trash3-fill fs-4"></i>
                                        </button>
                                    </form>
                                }
                            </div>
                        </div>

                    </div>

                   
                }
            }
            else
            {
                <p>Non ci sono ancora recensioni. Vuoi essere il primo?</p>
            }


<!-- Partial View for Review Form -->
@if (ViewBag.HasReviewed)
{
    <p class="fw-bold text-orange mt-3">Hai già recensito questo gioco.</p>
}
else
{
    @await Html.PartialAsync("~/Views/Review/_ReviewFormPartial.cshtml", new capstone_project.Models.ViewModels.ReviewViewModel
{
    GameId = Model.GameId
})
}
 </div>






        <div class="related-games-section mt-5">
            <h3 class="text-white mb-3">Altri giochi che potrebbero interessarti</h3>

            <div class="row">
                @foreach (var relatedGame in relatedGames)
                {
                    <div class="col-md-4 mb-4 mt-4">
                        <a asp-action="Details" asp-route-id="@relatedGame.GameId" class="text-decoration-none">
                            <div class="game-card border-0">
                                <div class="position-relative">
                                    @if (relatedGame.GameImages != null && relatedGame.GameImages.Any())
                                    {
                                        var coverImage = relatedGame.GameImages.FirstOrDefault(img => img.ImgType == (ImageType)0);
                                        if (coverImage != null)
                                        {
                                            var base64Image = Convert.ToBase64String(coverImage.Img);
                                            var imgSrc = $"data:image/png;base64,{base64Image}";
                                            <img src="@imgSrc" class="h-100 w-100 game-card-img" alt="@relatedGame.Name Cover" style="height: 200px; object-fit: cover;" />
                                        }
                                    }
                                    else
                                    {
                                        <img src="~/images/predefined/default-profile.jpg" class="card-img-top" alt="Placeholder" style="height: 200px; object-fit: cover;" />
                                    }
                                    <!-- Badge for Platform -->
                                    <span class="myBadge myOrangeBg position-absolute px-1 py-1" style="bottom: -3.5px; left: 0px;">@relatedGame.Platform</span>
                                </div>
                            </div>
                        </a>
                        <div class="d-flex justify-content-between align-items-center mt-2">
                            <h5 class="game-card-title text-white">@relatedGame.Name </h5>
                            <span class="text-white fw-bold fs-6">@relatedGame.Price €</span>
                        </div>
                    </div>
                }
            </div>
        </div>





        <div class="mb-3 mt-5">
<a asp-action="List" class="auth-btn fs-3">Torna alla lista</a>

</div>
<div class="mt-5"></div>
    </div></div>
@section Scripts {  
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/js/game_details.js" asp-append-version="true"></script>
}
