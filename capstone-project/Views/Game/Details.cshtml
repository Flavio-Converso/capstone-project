@model capstone_project.Models.Game

@{
    ViewBag.Title = "Dettagli Gioco";
    var cartGameIds = ViewBag.CartGameIds as List<int> ?? new List<int>(); // List of games in the cart
}

<h2>Dettagli Gioco</h2>

<div>
    <h4>@Model.Name</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">Descrizione</dt>
        <dd class="col-sm-10">@Model.Description</dd>

        <dt class="col-sm-2">Piattaforma</dt>
        <dd class="col-sm-10">@Model.Platform</dd>

        <dt class="col-sm-2">Produttore</dt>
        <dd class="col-sm-10">@Model.Publisher</dd>

        <dt class="col-sm-2">Quantità disponibile</dt>
        <dd class="col-sm-10">@Model.QuantityAvail</dd>

        <dt class="col-sm-2">Prezzo</dt>
        <dd class="col-sm-10">@Model.Price.ToString("C")</dd>

        <dt class="col-sm-2">Data di Rilascio</dt>
        <dd class="col-sm-10">@Model.ReleaseDate.ToShortDateString()</dd>

        <dt class="col-sm-2">PEGI</dt>
        <dd class="col-sm-10">@Model.Pegi.Name</dd>

        <dt class="col-sm-2">Restrizioni</dt>
        <dd class="col-sm-10">
            @foreach (var restriction in Model.Restrictions)
            {
                <span>@restriction.Name</span>
            }
        </dd>

        <dt class="col-sm-2">Categorie</dt>
        <dd class="col-sm-10">
            @foreach (var category in Model.Categories)
            {
                <span>@category.Name</span>
            }
        </dd>

        <!-- Images Section -->
        <dt class="col-sm-2">Cover</dt>
        <dd class="col-sm-10">
            @{
                var coverImages = Model.GameImages.Where(img => img.ImgType == ImageType.Cover).ToList();
                if (coverImages.Any())
                {
                    foreach (var image in coverImages)
                    {
                        var base64Image = Convert.ToBase64String(image.Img);
                        var imgSrc = $"data:image/png;base64,{base64Image}";
                        <img src="@imgSrc" alt="Cover Image" style="width:100px;height:auto;" />
                    }
                }
                else
                {
                    <span>No cover image available</span>
                }
            }
        </dd>

        <dt class="col-sm-2">Screenshot</dt>
        <dd class="col-sm-10">
            @{
                var screenshotImages = Model.GameImages.Where(img => img.ImgType == ImageType.Screenshot).ToList();
                if (screenshotImages.Any())
                {
                    foreach (var image in screenshotImages)
                    {
                        var base64Image = Convert.ToBase64String(image.Img);
                        var imgSrc = $"data:image/png;base64,{base64Image}";
                        <img src="@imgSrc" alt="Screenshot" style="width:100px;height:auto;" />
                    }
                }
                else
                {
                    <span>No screenshots available</span>
                }
            }
        </dd>

        <dt class="col-sm-2">Artwork</dt>
        <dd class="col-sm-10">
            @{
                var artworkImages = Model.GameImages.Where(img => img.ImgType == ImageType.Artwork).ToList();
                if (artworkImages.Any())
                {
                    foreach (var image in artworkImages)
                    {
                        var base64Image = Convert.ToBase64String(image.Img);
                        var imgSrc = $"data:image/png;base64,{base64Image}";
                        <img src="@imgSrc" alt="Artwork" style="width:100px;height:auto;" />
                    }
                }
                else
                {
                    <span>No artwork available</span>
                }
            }
        </dd>

        <dt class="col-sm-2">Icon</dt>
        <dd class="col-sm-10">
            @{
                var iconImages = Model.GameImages.Where(img => img.ImgType == ImageType.Icon).ToList();
                if (iconImages.Any())
                {
                    foreach (var image in iconImages)
                    {
                        var base64Image = Convert.ToBase64String(image.Img);
                        var imgSrc = $"data:image/png;base64,{base64Image}";
                        <img src="@imgSrc" alt="Icon" style="width:100px;height:auto;" />
                    }
                }
                else
                {
                    <span>No icon available</span>
                }
            }
        </dd>

        <dt class="col-sm-2">Logo</dt>
        <dd class="col-sm-10">
            @{
                var logoImages = Model.GameImages.Where(img => img.ImgType == ImageType.Logo).ToList();
                if (logoImages.Any())
                {
                    foreach (var image in logoImages)
                    {
                        var base64Image = Convert.ToBase64String(image.Img);
                        var imgSrc = $"data:image/png;base64,{base64Image}";
                        <img src="@imgSrc" alt="Logo" style="width:100px;height:auto;" />
                    }
                }
                else
                {
                    <span>No logo available</span>
                }
            }
        </dd>

        <dt class="col-sm-2">Banner</dt>
        <dd class="col-sm-10">
            @{
                var bannerImages = Model.GameImages.Where(img => img.ImgType == ImageType.Banner).ToList();
                if (bannerImages.Any())
                {
                    foreach (var image in bannerImages)
                    {
                        var base64Image = Convert.ToBase64String(image.Img);
                        var imgSrc = $"data:image/png;base64,{base64Image}";
                        <img src="@imgSrc" alt="Banner" style="width:100px;height:auto;" />
                    }
                }
                else
                {
                    <span>No banner available</span>
                }
            }
        </dd>

        <dt class="col-sm-2">Other</dt>
        <dd class="col-sm-10">
            @{
                var otherImages = Model.GameImages.Where(img => img.ImgType == ImageType.Other).ToList();
                if (otherImages.Any())
                {
                    foreach (var image in otherImages)
                    {
                        var base64Image = Convert.ToBase64String(image.Img);
                        var imgSrc = $"data:image/png;base64,{base64Image}";
                        <img src="@imgSrc" alt="Other Image" style="width:100px;height:auto;" />
                    }
                }
                else
                {
                    <span>No other images available</span>
                }
            }
        </dd>
    </dl>
</div>

<a asp-action="List" class="btn btn-secondary">Indietro alla Lista</a>
<a asp-action="Edit" asp-route-id="@Model.GameId" class="btn btn-primary">Modifica</a>
<a asp-action="Delete" asp-route-id="@Model.GameId" class="btn btn-danger">Elimina</a>
@if (ViewBag.IsInWishlist)
{
    <form asp-action="RemoveFromWishlist" method="post" style="display:inline;">
        @Html.AntiForgeryToken()
        <input type="hidden" name="gameId" value="@Model.GameId" />
        <input type="hidden" name="source" value="Details" />
        <button type="submit" class="btn btn-danger">Rimuovi dalla Wishlist</button>
    </form>
}
else
{
    <form asp-action="AddToWishlist" method="post" style="display:inline;">
        @Html.AntiForgeryToken()
        <input type="hidden" name="gameId" value="@Model.GameId" />
        <input type="hidden" name="source" value="Details" />
        <button type="submit" class="btn btn-warning">Aggiungi alla Wishlist</button>
    </form>
}
@if (cartGameIds.Contains(Model.GameId))
{
    <button class="btn btn-secondary" disabled>Nel Carrello</button>
}
else
{
    <form asp-action="AddToCart" method="post" style="display:inline;">
        @Html.AntiForgeryToken()
        <input type="hidden" name="gameId" value="@Model.GameId" />
        <input type="hidden" name="source" value="Details" />
        <button type="submit" class="btn btn-success">Aggiungi al carrello</button>
    </form>
}
